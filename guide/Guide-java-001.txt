#asm
# JAVA 설치
setup\jdk-8u251-windows-x64.exe

# JAVA Version 확인
C:\itnova>java -version
java version "1.8.0_271"
Java(TM) SE Runtime Environment (build 1.8.0_271-b09)
Java HotSpot(TM) 64-Bit Server VM (build 25.271-b09, mixed mode)

# JAVA Update
 Java > 업데이트 확인 > 지금 업데이트

# PATH에 %JAVA_HOME%/bin 추가

# javac 확인
C:\itnova>javac

# Hello.java 작성
class Hello {
    public static void main (String[] args) {
        System.out.println("Hello, Java!");
    }
}
모든 자바 애플리케이션은 최소한 한개의 클래스, main 메소드 하나가 있어야 한다.

# compile
C:\itnova>javac Hello.java

# JAVA Appl 실행
C:\itnova>java Hello
Hello, Java!


테스트 라인

# args의 이해
console 창에서 전달되는 파라메터의 String 배열

class HelloArgs {
    public static void main(String[] args) {
		System.out.println("arg[0]" + args[0]);
		System.out.println("arg[1]" + args[1]);
		System.out.println("arg[2]" + args[2]);
	}
}

조건문
class HelloArgs {
    public static void main(String[] args) {
		if(args.length < 3) {
			System.out.println("인자의 갯수는 3개 이상이어야 합니다.");
			return;
		}
		System.out.println("arg[0]" + args[0]);
		System.out.println("arg[1]" + args[1]);
		System.out.println("arg[2]" + args[2]);
	}
}

반복 yyyyyy
class HelloArgs {
    public static void main(String[] args) {
        // 라인단위
        /*
           멀티라인1
           멀티라인2
        */
		if(args.length < 3) {
			System.out.println("인자의 갯수는 3개 이상이어야 합니다.");
			return;
		}
		for(int i = 0 ; i < args.length ; i++) {
			System.out.println("args[" + i + "]" + args[i]);
		}
	}
}

# 독립된 class 작성
Matl class : 재료비 계산
MatlDemo class : Matl 객체를 생성하고 실행(main method가 있는 class)

class Matl {
	String name;
    double pric;
	double wegt;
    double cost;

	void calcCost() {
	    cost = pric * wegt;
	}

	void showMe() {
		System.out.println("Cost: " + cost);
	}
}

class MatlDemo {
	public static void main (String[] args) {
		//객체의 선언
		Matl matl1 = new Matl();
		matl1.pric = 100.0;
		matl1.wegt = 20.0;
		matl1.calcCost();
		matl1.showMe();

		//객체의 배열
		Matl[] matls = new Matl[10];
		int cnt = 0;

		while(cnt < 10) {
			//새로운 객체를 생성하고 배열 원소에 대입합니다.
			matls[cnt] = new Matl();
			matls[cnt].pric = (cnt + 1) * 100.0;
			matls[cnt].wegt = 10.0;
			matls[cnt].calcCost();
			matls[cnt].showMe();
			cnt++;
		}
	}
}
