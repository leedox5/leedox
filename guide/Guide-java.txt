IDE를 사용하면 중요한 내용을 자세하게 모르고 넘어갈 수 있기 때문에 
명령행에서 정확한 내용을 이해하고, 그런 과정을 자동으로 처리해주는 도구는
나중에 사용하는 것이 좋습니다.

텍스트 편집기 만을 사용한다.
#JAVA 설치
http://java.com

#JAVA Version 확인

C:\itnova>java -version
java version "1.8.0_271"
Java(TM) SE Runtime Environment (build 1.8.0_271-b09)
Java HotSpot(TM) 64-Bit Server VM (build 25.271-b09, mixed mode)

# PATH에 %JAVA_HOME%/bin 추가

# javac 확인
C:\itnova>javac

# Hello.java 작성
class Hello {
    public static void main (String[] args) {
        System.out.println("Hello, Java!");
    }
}

# compile
C:\itnova>javac Hello.java

# 실행
C:\itnova>java Hello
Hello, Java!

**) OO(객체지향)에서 가장 좋은것중에 하나는
한번 만들어두고 테스트를 끝낸 코드는 다시 건드리지 않아도 된다는 점


# 클래스와 객체
클래스는 객체를 만들기 위한 청사진
객체를 아직 사용하지 않은 주소록 카드에 비율
각 카드는 모두 똑같은 빈 칸(인스터스 변수)이 있습니다.


# 지역변수는 사용하기 전에 반드시 초기화해야 합니다.
C:\itnova>javac Matl.java
Matl.java:13: error: variable x might not have been initialized
                int z = x + 3;
                        ^
1 error

# 객체지향 원리를 잘 따르려면 한 클래스로 너무 많은 것을 처리하지 않는 것이 좋다.

# 고수준 설계
# 준비 코드, 테스트 코드, 실제(Java)코드
